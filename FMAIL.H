//---------------------------------------------------------------------------
//
//  Copyright (C) 2007        Folkert J. Wijnstra
//  Copyright (C) 2007 - 2013 Wilfred van Velzen
//
//
//  This file is part of FMail.
//
//  FMail is free software; you can redistribute it and/or modify
//  it under the terms of the GNU General Public License as published by
//  the Free Software Foundation; either version 3 of the License, or
//  (at your option) any later version.
//
//  FMail is distributed in the hope that it will be useful,
//  but WITHOUT ANY WARRANTY; without even the implied warranty of
//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
//  GNU General Public License for more details.
//
//  You should have received a copy of the GNU General Public License
//  along with this program.  If not, see <http://www.gnu.org/licenses/>.
//
//---------------------------------------------------------------------------

#include "fmstruct.h"

#define FA_SPEC 0x1F

#if (__BORLANDC__ >= 0x0452)
#ifndef __OS2__
#define _open  _rtl_open
#define _close _rtl_close
#define _creat _rtl_creat
#define _read  _rtl_read
#define _write _rtl_write
#endif
#endif

#ifdef GOLDBASE
  #define MBNAME "QuickBBS Gold"
#else
  #define MBNAME "Hudson"
#endif

#define CONFIG_MAJOR   0
#define CONFIG_MINOR  94 // do not change

#ifdef GOLDBASE
   #define MBEXTN   "dat"
   #define MBEXTB   "fmg"
   #define MBBOARDS 500
#else
   #define MBEXTN   "bbs"
   #define MBEXTB   "fml"
   #define MBBOARDS 200
#endif

#define PRODUCTCODE_HIGH  0x00
#define PRODUCTCODE_LOW   0x81  // ftscprod

#define TABLE_SIZE 255 // max 40 handles

#define DEF_TEXT_SIZE 0xc000
#ifdef __32BIT__
// 1 megabyte
#define TEXT_SIZE     (config.maxMsgSize * 1024L)
#else
#define TEXT_SIZE     0xc000
#endif
#define INTMSG_SIZE   (sizeof(internalMsgType)-DEF_TEXT_SIZE+TEXT_SIZE)

#define PKT_INFO_SIZE    192

#define MAX_MSGPATH    200
#define MAX_MSGTINY     80
#define MAX_MSGSEENBY 1000

#define TINY_SEEN_SIZE 1024
#define NORM_SEEN_SIZE 8192
#define NORM_PATH_SIZE 1024


extern char configPath[128];

typedef struct
{ uchar       fromUserName[36];
  uchar       toUserName[36];
  uchar       subject[72];
  uchar       dateStr[22];
  uchar       okDateStr[20];
  u16         year,
              month,
              day,
              hours,
              minutes,
              seconds;
  u16         attribute;
  u16         cost;
  nodeNumType srcNode;
  nodeNumType destNode;
  uchar       tinySeen[TINY_SEEN_SIZE];
  uchar       normSeen[NORM_SEEN_SIZE];
  uchar       normPath[NORM_PATH_SIZE];
  uchar       pktInfo[PKT_INFO_SIZE];
  uchar       text[DEF_TEXT_SIZE];
} internalMsgType;

typedef struct
{
  u16 net;
  u16 node;
} psRecType;

typedef psRecType psType[];
typedef uchar tempStrType[128];

typedef struct
{
   nodeNumType  packetSrcNode;     /* Generated by openPktRd (MSGPKT.C) */
                                   /* Used for security check(FMAIL.C)  */
   nodeNumType  packetDestNode;    /* Used for 'Processing..'(FMAIL.C)  */
   u16          packetDestAka;     /* Generated by openPktRd (MSGPKT.C) */
                                   /* Used by      addVia    (FMAIL.C)  */
   u16		packetSize;        /* Used for 'Processing..'(FMAIL.C)  */
   u16          hour, min, sec,    /* Used for 'Processing..'(FMAIL.C)  */
		day, month, year;
   u16          versionHi,versionLo;
   u16          password;
   u16          remoteCapability;  /* Generated by openPktRd (MSGPKT.C) */
   u16          remoteProdCode;    /* Generated by openPktRd (MSGPKT.C) */
#ifdef GOLDBASE
   u32          origTotalMsgBBS;   /* Generated by initBBS   (MSGRA.C)  */
				   /* Used by      sortBBS   (UTILRA.C) */
   u32          baseTotalTxtRecs;  /* Generated by initBBS   (MSGRA.C)  */
				   /* Used by      writeBBS  (MSGRA.C) */
#else
   u16          origTotalMsgBBS;   /* Generated by initBBS   (MSGRA.C)  */
				   /* Used by      sortBBS   (UTILRA.C) */
   u16          baseTotalTxtRecs;  /* Generated by initBBS   (MSGRA.C)  */
				   /* Used by      writeBBS  (MSGRA.C) */
#endif
   u32          switches;          /* Generated by initFMail (CONFIG.C) */

   u16          createSemaphore;
   u16          movedBad,
		mbCount,
		mbCountV,
/*              jamCount, not used yet */
		jamCountV,
		echoCount,
		echoCountV,
		nmbCountV,
		netCount,
		netCountV,
		dupCount,
		dupCountV,
		badCount,
		badCountV,
		perCount,
		perCountV,
		perNetCount,
		perNetCountV,
		fromNoExpMsg,
		fromNoExpDup,
		fromNoExpSec;
} globVarsType;

/*
      AttributeWord   bit       meaning
		      ---       --------------------
			0  +    Private
			1  + s  Crash
			2       Recd
			3       Sent
                        4  +    FileAttached
                        5       InTransit
                        6       Orphan
                        7       KillSent
                        8       Local
                        9    s  HoldForPickup
                       10  +    unused
                       11    s  FileRequest
                       12  + s  ReturnReceiptRequest
                       13  + s  IsReturnReceipt
                       14  + s  AuditRequest
                       15    s  FileUpdateReq

                             s - need not be recognized, but it's ok
|                            + - not zeroed before packeting

      Bits numbers ascend with arithmetic significance of bit position.
*/

#define PRIVATE           1
#define CRASH             2
#define RECEIVED          4
#define SENT              8
#define FILE_ATT         16
#define IN_TRANSIT       32
#define ORPHAN           64
#define KILLSENT        128
#define LOCAL           256
#define HOLDPICKUP      512
#define UNUSED         1024
#define FILE_REQ       2048
#define RET_REC_REQ    4096
#define IS_RET_REC     8192
#define AUDIT_REQ     16384
#define FILE_UPD_REQ  32768L

#define _K_ENTER_ 0x000d
#define _K_ESC_   0x001b
#define _K_BSPC_  0x0008

#define _K_F1_    0x3b00
#define _K_F2_    0x3c00
#define _K_F3_    0x3d00
#define _K_F4_    0x3e00
#define _K_F5_    0x3f00
#define _K_F6_    0x4000
#define _K_F7_    0x4100
#define _K_F8_    0x4200
#define _K_F9_    0x4300
#define _K_F10_   0x4400

#define _K_HOME_  0x4700
#define _K_END_   0x4f00
#define _K_PGUP_  0x4900
#define _K_PGDN_  0x5100
#define _K_LEFT_  0x4b00
#define _K_RIGHT_ 0x4d00
#define _K_UP_    0x4800
#define _K_DOWN_  0x5000
#define _K_INS_   0x5200
#define _K_DEL_   0x5300

#define _K_CPGUP_ 0x8400
#define _K_CPGDN_ 0x7600
#define _K_CUP    0x4800
#define _K_CDOWN_ 0x5000
#define _K_CLEFT_ 0x7300
#define _K_CRIGHT_ 0x7400
#define _K_CEND_  0x7500

#define _K_CTLF_  0x0006
#define _K_CTLY_  0x0019

#define _K_ALTA_  0x1E00
#define _K_ALTB_  0x3000
#define _K_ALTC_  0x2E00
#define _K_ALTD_  0x2000
#define _K_ALTE_  0x1200
#define _K_ALTF_  0x2100
#define _K_ALTG_  0x2200
#define _K_ALTH_  0x2300
#define _K_ALTI_  0x1700
#define _K_ALTJ_  0x2400
#define _K_ALTK_  0x2500
#define _K_ALTL_  0x2600
#define _K_ALTM_  0x3200
#define _K_ALTN_  0x3100
#define _K_ALTO_  0x1800
#define _K_ALTP_  0x1900
#define _K_ALTQ_  0x1000
#define _K_ALTR_  0x1300
#define _K_ALTS_  0x1F00
#define _K_ALTT_  0x1400
#define _K_ALTU_  0x1600
#define _K_ALTV_  0x2F00
#define _K_ALTW_  0x1100
#define _K_ALTX_  0x2D00
#define _K_ALTY_  0x1500
#define _K_ALTZ_  0x2C00

extern s16 breakPressed;
extern internalMsgType *message;

u16 getAreaCode (char *msgText);

#define DERR_HACKER     -1
#define DERR_VAL        2
#define DERR_WRPKTE     3
#define DERR_CLPKTE     4
#define DERR_PRSCN      5
#define DERR_PACK       6
#define DERR_WRHECHO    16
#define DERR_WRHBAD     17
#define DERR_WRHDUP     18
#define DERR_WRJECHO    32

#include "internal.h"

#define nodegreater(n1, n2)      \
(  ((n1.zone  >  n2.zone) ||     \
   ((n1.zone  == n2.zone) &&     \
    (n1.net   >  n2.net)) ||     \
   ((n1.zone  == n2.zone) &&     \
    (n1.net   == n2.net) &&      \
    (n1.node  >  n2.node)) ||    \
   ((n1.zone  == n2.zone) &&     \
    (n1.net   == n2.net) &&      \
    (n1.node  == n2.node) &&     \
    (n1.point >  n2.point)))     \
)

u16 foundToUserName(u8 *toUserName);
